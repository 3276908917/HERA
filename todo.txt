Send Ridhima the plot for the old results on time simulation,
	we use these to compare and verify the NEW implementation.

Do an A 4x4 grid for:
	* imaginary
	* real
	* fix the formatting

	> log view
		* adjust log scale to get more contrast
		* you might need to adjust the axes so that all of the plots run along the same scales
			(comparison easier that way)
	* apply a grid

You can do a time simulation for an arbitrary window,
	although it is true that in the end we only care about the cold patch.

"Return projected map -> store in variable
    variable -> imshow"

-----------------

Monday or so: script with code, from paper

https://healpy.readthedocs.io/en/latest/generated/healpy.rotator.Rotator.rotate_map_pixel.html

https://healpy.readthedocs.io/en/latest/generated/healpy.rotator.Rotator.html

flux s1 = (nu1 / nu2) ^ \alpha * s2 (flux s2)
	* s2 is 150 in our case

S ~/prop\nu^alpha
S_{200} = S_{150} * (200/150)^\alpha

0. proper A matrix visualization formatting (see above)
1. implement proper time rotation, and plot the cold patch data
	* We want to generate the J matrix once and then rotate the sky, not the beam!
	i.e. do not use time as a parameter in J matrix calculation
	* Healpy has rotate-by-time functionality

	* create 1D plot from cold patch
	    great Slack question: what is the best way
	    to visually represent the results?
	* time axis (2D), frequency axis (3D)
2. verify that ALL of the functions in rot return (az, alt) and not (alt, az)
	this is for consistency sake, and for anyone looking to use my code	
3. investigate the J matrix zero debacle? It is not an issue anymore,
	but I wonder why it happens
4. update every notebook in the repository
	* import skyflux as sf

beam variation is what we will eventually be handling anyway
"I will leave the chunking of frequency and time up to you."


???:
PING RIDHIMA TO GET FREQUENCY BEAM
    once you have your current pipeline working for this
        frequency

for now, assume that 100-200 MHz is the same frequency
    use spectral index to scale the result
    split it at 1 MHz for now.
    (i.e. same Jones matrix 100-200 MHz for now).
use constant flux independent of frequency
	(this is the same as saying that alpha is equal to one)
	then varying frequency from 100-200 MHz
	'assume it is the same beam between 100 and 200 MHz'

read up on healpy.cartview,
    that is a third option besides Mollview and orthview

do not worry if the axes are not in RA and Dec,
    just get the healpy grid on the A matrices
    like in the Stack Overflow

15 m or 30 m baseline East-West
    I do not remember what this means.

I need to plot the A matrix, to see the leakage terms.
Plot it in healpix. It doesn't have to look like in Ridhima's
paper because she did not use healpix.

(Ask for Ridhima's power spectrum notebook plot for a
single baseline, once the above work has been completed and tested.)
