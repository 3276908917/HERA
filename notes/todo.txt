as of 10/28/20:
	The two big priorities are still the equations: 

	1. Want to find the equation which rotates the J and/or matrices according to time

	2. Want to find the equation which predicts the HERA beam patterns,
i.e. find an equation which makes-obsolete the many files of the form
		HERA_4.9m_E-pattern_151MHz.txt

as of 9/9/20:
* Invent J rotation-by-time theory
* Re-run multi source. It is true that I have not yet found a theory,
	but the output graph may look different based on the fixes that I have applied
	during the correction of single_source.
	* Furthermore, we need to use np.abs rather than np.real. np.real gives negative visibilities,
		but we do not care about phase just yet.
* Clean up old notebooks with contemporary commentary

Spiritual goals:
* There has to be a better way than a 1 GB SBF params file.
	* How do we quickly produce a beam function that
		operates efficiently without any external baggage
		(like monstrous RAM / disk usage)

----------

Query Ridhima about the strange phase shift in my source_over_time function (it employs the beam rotation approach)

How do I create a rotator? The theory: I am still working on it.

---------

We use the old time evolution results to verify the NEW implementation.
	Even though the old implementation is ponderous, it is technically accurate.

A 4x4 grid todo:
	> adjust the axes so that the plots run along the same scales
		(we have already written the code; we want to test and debug it now)			"this applies JUST to the same diagonal terms"
			
	* apply grid lines

	* use matplotlib fig and subplot.ispace and edgespace?
		to allow larger plots

You can do a time simulation for an arbitrary window,
	although it is true that in the end we only care about the cold patch.

"Return projected map -> store in variable
    variable -> imshow"

-----------------

Monday or so: script with code, from paper

https://healpy.readthedocs.io/en/latest/generated/healpy.rotator.Rotator.rotate_map_pixel.html

https://healpy.readthedocs.io/en/latest/generated/healpy.rotator.Rotator.html

1. implement proper time rotation, and plot the cold patch data
	* We want to generate the J matrix once and then rotate the sky, not the beam!
	i.e. do not use time as a parameter in J matrix calculation
	* Healpy has rotate-by-time functionality

	* create 1D plot from cold patch
2. verify that ALL of the functions in rot return (az, alt) and not (alt, az)
	this is for consistency sake, and who might mischance upon my code in the future
3. investigate the J matrix zero debacle? It is not an issue anymore,
	but I wonder why it happens 

I need to plot the A matrix, to see the leakage terms.
Plot it in healpix. It doesn't have to look like in Ridhima's
paper because she did not use healpix.
